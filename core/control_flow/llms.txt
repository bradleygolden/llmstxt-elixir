# Elixir Control Flow Guidelines
> Best practices for structuring conditional logic, using boolean operators, handling errors, and avoiding common control flow pitfalls in Elixir.

## Resources
* [Kernel.SpecialForms cond/1](https://hexdocs.pm/elixir/Kernel.SpecialForms.html#cond/1): Hexdocs for the `cond` special form.
* [Case, cond, and if (Getting Started)](https://elixir-lang.org/getting-started/case-cond-and-if.html#case): Elixir guide covering basic control flow structures.
* [Boolean Operators](https://hexdocs.pm/elixir/operators.html#boolean-operators): Hexdocs for `||`, `&&`, `!`.
* [Strict Boolean Operators](https://hexdocs.pm/elixir/operators.html#strict-boolean-operators-and-or-not): Hexdocs for `or`, `and`, `not`.
* [Anti-Patterns: Complex else in `with`](https://hexdocs.pm/elixir/main/anti-patterns.html#complex-else-in-with): Discussion on avoiding complex logic in `with/else`.
* [Anti-Patterns: Exceptions for control-flow](https://hexdocs.pm/elixir/main/anti-patterns.html#exceptions-for-control-flow): Discussion on proper use of exceptions vs. tagged tuples.
* [Anti-Patterns: Non-assertive truthiness](https://hexdocs.pm/elixir/main/anti-patterns.html#non-assertive-truthiness): Discussion on explicit checks vs. implicit truthiness.