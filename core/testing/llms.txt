# Elixir Testing Guidelines
> Best practices for writing effective tests in Elixir using ExUnit, including setup, concurrency, tagging, doctests, testing OTP components, and avoiding common anti-patterns.

## Resources
* [ExUnit](https://hexdocs.pm/ex_unit/ExUnit.html): Hexdocs for the ExUnit testing framework.
* [ExUnit.Callbacks (setup/setup_all)](https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html): Hexdocs for test setup callbacks and concurrency (`async: true`).
* [ExUnit Tags](https://hexdocs.pm/ex_unit/ExUnit.Case.html#module-tags): Hexdocs for using tags to organize tests.
* [ExUnit.DocTest](https://hexdocs.pm/ex_unit/ExUnit.DocTest.html): Hexdocs for writing tests within documentation examples.
* [GenServer](https://hexdocs.pm/elixir/GenServer.html): Hexdocs for the GenServer behaviour (often tested via its client API).
* [Task](https://hexdocs.pm/elixir/Task.html): Hexdocs for the Task module for asynchronous work (relevant for testing async operations).
* [Testing Anti-patterns](https://hexdocs.pm/elixir/master/testing-anti-patterns.html): Official guide discussing common testing pitfalls in Elixir.