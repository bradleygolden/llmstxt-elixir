# Elixir Best Practices Guide
> Index of llms.txt files covering core Elixir language features, coding style, and best practices.

This guide aggregates best practices for Elixir development, covering various aspects of coding style, structure, and common patterns.

## Principles
* [Programming Principles](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/principles/llms.txt): Core guidelines on writing maintainable Elixir code.

## Formatting
* [Formatting Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/formatting/llms.txt): Rules on code layout and using `mix format`.

## Naming
* [Naming Conventions](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/naming/llms.txt): Standards on naming variables, functions, and modules.

## Control Flow
* [Control Flow Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/control_flow/llms.txt): Structuring conditional logic and flow.

## Modularity
* [Modularity and Function Design](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/modularity/llms.txt): Organizing code into functions and modules.

## Documentation
* [Documentation Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/documentation/llms.txt): Using `@moduledoc`, `@doc`, `@spec`, and comments effectively.

## Error Handling
* [Error Handling Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/error_handling/llms.txt): Strategies on managing errors and exceptions.

## Data Structures
* [Data Structures and Pipelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/data_structures/llms.txt): Guidance on using common data structures and the pipe operator.

## Processes
* [Process Anti-patterns](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/processes/llms.txt): Common pitfalls when working with Elixir processes.

## Metaprogramming
* [Metaprogramming Anti-patterns](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/metaprogramming/llms.txt): Common pitfalls when using metaprogramming.

## Configuration
* [Configuration Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/configuration/llms.txt): Best practices for application configuration.

## Testing
* [Testing Guidelines](https://raw.githubusercontent.com/bradleygolden/llmstxt-elixir/refs/heads/main/core/testing/llms.txt): Best practices for testing Elixir applications.